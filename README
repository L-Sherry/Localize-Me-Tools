These tools help to create translations for use by Localize-Me
The dependencies are Python >= 3.6 and pycrypto.

Localize-Me: https://github.com/L-Sherry/Localize-me

There are two tools: jsontr.py and packfile.py.  The first one creates
and update big translations packs, while the second essentially massage them.

jsontr.py
---------

This tool basically finds every string in the game and ask you to translate
each of them using a readline interface.

It takes an insane amount of options, that can be saved in a config file
for easier handling.  See --help for detail about them.

It possess five subcommands:
"saveconfig" to save the current command line option into a config file
"continue" to start or continue translating the game
"count" which simply count strings
"check" which make several attempts at finding problems with the translations.
"save_cache" which will cache the strings into a file for faster access later.

packfile.py
-----------

This tool can be used to create map files, split big packfiles using map files,
merge small packfiles into a big one (and optionally sort it) or create a
packfile out of a untranslated and translated lang file.

- Merge multiple pack files into one, for easier editing:

./packfile merge my_pack_dir/ my_resulting_big_pack_file.json

- Create a map file from a big pack file, so you can split a big pack file into
  several, then actually split the big pack file

./packfile.py --map-file my-map-file.json mkmap my_big_pack_file.json
(you may customize my-map-file.json now...)
./packfile.py --map-file my-map-file.json split my_big_pack_file.json output_directory

- Diff two langfiles to create a pack file.
  (This only work for lang files, i.e. files under data/lang/)
./packfile.py difflang original/lang.en_US.json translated/lang.es_ES.json resulting_packfile.json
